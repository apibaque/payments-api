/*
 * Gosocket Payment API
 * Synchronize payments API
 *
 * OpenAPI spec version: v1
 * Contact: developerteam@gosocket.net
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.notification.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.notification.model.GosocketPaymentDataModelsRedbancAccountPayment;
import io.swagger.client.notification.model.GosocketPaymentDataModelsRedbancAmountPayment;

import java.io.IOException;

/**
 * GosocketPaymentDataModelsRedbancPaymentModel
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-03-13T18:41:34.367Z")
public class GosocketPaymentDataModelsRedbancPaymentModel {
  @SerializedName("creditorAccount")
  private GosocketPaymentDataModelsRedbancAccountPayment creditorAccount = null;

  @SerializedName("debtorAccount")
  private GosocketPaymentDataModelsRedbancAccountPayment debtorAccount = null;

  @SerializedName("instructedAmount")
  private GosocketPaymentDataModelsRedbancAmountPayment instructedAmount = null;

  @SerializedName("status")
  private String status = null;

  public GosocketPaymentDataModelsRedbancPaymentModel creditorAccount(GosocketPaymentDataModelsRedbancAccountPayment creditorAccount) {
    this.creditorAccount = creditorAccount;
    return this;
  }

   /**
   * Get creditorAccount
   * @return creditorAccount
  **/
  @ApiModelProperty(value = "")
  public GosocketPaymentDataModelsRedbancAccountPayment getCreditorAccount() {
    return creditorAccount;
  }

  public void setCreditorAccount(GosocketPaymentDataModelsRedbancAccountPayment creditorAccount) {
    this.creditorAccount = creditorAccount;
  }

  public GosocketPaymentDataModelsRedbancPaymentModel debtorAccount(GosocketPaymentDataModelsRedbancAccountPayment debtorAccount) {
    this.debtorAccount = debtorAccount;
    return this;
  }

   /**
   * Get debtorAccount
   * @return debtorAccount
  **/
  @ApiModelProperty(value = "")
  public GosocketPaymentDataModelsRedbancAccountPayment getDebtorAccount() {
    return debtorAccount;
  }

  public void setDebtorAccount(GosocketPaymentDataModelsRedbancAccountPayment debtorAccount) {
    this.debtorAccount = debtorAccount;
  }

  public GosocketPaymentDataModelsRedbancPaymentModel instructedAmount(GosocketPaymentDataModelsRedbancAmountPayment instructedAmount) {
    this.instructedAmount = instructedAmount;
    return this;
  }

   /**
   * Get instructedAmount
   * @return instructedAmount
  **/
  @ApiModelProperty(value = "")
  public GosocketPaymentDataModelsRedbancAmountPayment getInstructedAmount() {
    return instructedAmount;
  }

  public void setInstructedAmount(GosocketPaymentDataModelsRedbancAmountPayment instructedAmount) {
    this.instructedAmount = instructedAmount;
  }

  public GosocketPaymentDataModelsRedbancPaymentModel status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GosocketPaymentDataModelsRedbancPaymentModel gosocketPaymentDataModelsRedbancPaymentModel = (GosocketPaymentDataModelsRedbancPaymentModel) o;
    return Objects.equals(this.creditorAccount, gosocketPaymentDataModelsRedbancPaymentModel.creditorAccount) &&
        Objects.equals(this.debtorAccount, gosocketPaymentDataModelsRedbancPaymentModel.debtorAccount) &&
        Objects.equals(this.instructedAmount, gosocketPaymentDataModelsRedbancPaymentModel.instructedAmount) &&
        Objects.equals(this.status, gosocketPaymentDataModelsRedbancPaymentModel.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(creditorAccount, debtorAccount, instructedAmount, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GosocketPaymentDataModelsRedbancPaymentModel {\n");
    
    sb.append("    creditorAccount: ").append(toIndentedString(creditorAccount)).append("\n");
    sb.append("    debtorAccount: ").append(toIndentedString(debtorAccount)).append("\n");
    sb.append("    instructedAmount: ").append(toIndentedString(instructedAmount)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

