/*
 * Gosocket Payment API
 * Synchronize payments API
 *
 * OpenAPI spec version: v1
 * Contact: developerteam@gosocket.net
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.notification.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * GosocketPaymentDataModelsMobileMobilePaymentItem
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-03-13T18:41:34.367Z")
public class GosocketPaymentDataModelsMobileMobilePaymentItem {
  @SerializedName("OrderId")
  private String orderId = null;

  @SerializedName("CreditorTaxId")
  private String creditorTaxId = null;

  @SerializedName("DebtorTaxId")
  private String debtorTaxId = null;

  @SerializedName("PaymentMethod")
  private Integer paymentMethod = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("Currency")
  private String currency = null;

  @SerializedName("DocumentsIdToPay")
  private List<String> documentsIdToPay = null;

  public GosocketPaymentDataModelsMobileMobilePaymentItem orderId(String orderId) {
    this.orderId = orderId;
    return this;
  }

   /**
   * Get orderId
   * @return orderId
  **/
  @ApiModelProperty(value = "")
  public String getOrderId() {
    return orderId;
  }

  public void setOrderId(String orderId) {
    this.orderId = orderId;
  }

  public GosocketPaymentDataModelsMobileMobilePaymentItem creditorTaxId(String creditorTaxId) {
    this.creditorTaxId = creditorTaxId;
    return this;
  }

   /**
   * Get creditorTaxId
   * @return creditorTaxId
  **/
  @ApiModelProperty(value = "")
  public String getCreditorTaxId() {
    return creditorTaxId;
  }

  public void setCreditorTaxId(String creditorTaxId) {
    this.creditorTaxId = creditorTaxId;
  }

  public GosocketPaymentDataModelsMobileMobilePaymentItem debtorTaxId(String debtorTaxId) {
    this.debtorTaxId = debtorTaxId;
    return this;
  }

   /**
   * Get debtorTaxId
   * @return debtorTaxId
  **/
  @ApiModelProperty(value = "")
  public String getDebtorTaxId() {
    return debtorTaxId;
  }

  public void setDebtorTaxId(String debtorTaxId) {
    this.debtorTaxId = debtorTaxId;
  }

  public GosocketPaymentDataModelsMobileMobilePaymentItem paymentMethod(Integer paymentMethod) {
    this.paymentMethod = paymentMethod;
    return this;
  }

   /**
   * Get paymentMethod
   * @return paymentMethod
  **/
  @ApiModelProperty(value = "")
  public Integer getPaymentMethod() {
    return paymentMethod;
  }

  public void setPaymentMethod(Integer paymentMethod) {
    this.paymentMethod = paymentMethod;
  }

  public GosocketPaymentDataModelsMobileMobilePaymentItem description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public GosocketPaymentDataModelsMobileMobilePaymentItem currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(value = "")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public GosocketPaymentDataModelsMobileMobilePaymentItem documentsIdToPay(List<String> documentsIdToPay) {
    this.documentsIdToPay = documentsIdToPay;
    return this;
  }

  public GosocketPaymentDataModelsMobileMobilePaymentItem addDocumentsIdToPayItem(String documentsIdToPayItem) {
    if (this.documentsIdToPay == null) {
      this.documentsIdToPay = new ArrayList<String>();
    }
    this.documentsIdToPay.add(documentsIdToPayItem);
    return this;
  }

   /**
   * Get documentsIdToPay
   * @return documentsIdToPay
  **/
  @ApiModelProperty(value = "")
  public List<String> getDocumentsIdToPay() {
    return documentsIdToPay;
  }

  public void setDocumentsIdToPay(List<String> documentsIdToPay) {
    this.documentsIdToPay = documentsIdToPay;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GosocketPaymentDataModelsMobileMobilePaymentItem gosocketPaymentDataModelsMobileMobilePaymentItem = (GosocketPaymentDataModelsMobileMobilePaymentItem) o;
    return Objects.equals(this.orderId, gosocketPaymentDataModelsMobileMobilePaymentItem.orderId) &&
        Objects.equals(this.creditorTaxId, gosocketPaymentDataModelsMobileMobilePaymentItem.creditorTaxId) &&
        Objects.equals(this.debtorTaxId, gosocketPaymentDataModelsMobileMobilePaymentItem.debtorTaxId) &&
        Objects.equals(this.paymentMethod, gosocketPaymentDataModelsMobileMobilePaymentItem.paymentMethod) &&
        Objects.equals(this.description, gosocketPaymentDataModelsMobileMobilePaymentItem.description) &&
        Objects.equals(this.currency, gosocketPaymentDataModelsMobileMobilePaymentItem.currency) &&
        Objects.equals(this.documentsIdToPay, gosocketPaymentDataModelsMobileMobilePaymentItem.documentsIdToPay);
  }

  @Override
  public int hashCode() {
    return Objects.hash(orderId, creditorTaxId, debtorTaxId, paymentMethod, description, currency, documentsIdToPay);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GosocketPaymentDataModelsMobileMobilePaymentItem {\n");
    
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    creditorTaxId: ").append(toIndentedString(creditorTaxId)).append("\n");
    sb.append("    debtorTaxId: ").append(toIndentedString(debtorTaxId)).append("\n");
    sb.append("    paymentMethod: ").append(toIndentedString(paymentMethod)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    documentsIdToPay: ").append(toIndentedString(documentsIdToPay)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

